{"version":3,"sources":["BulletNote/actions/index.ts","BulletNote/types.ts","BulletNote/functions/handleParseMessage.ts","BulletNote/functions/HandleDataInLocalStorage.ts","BulletNote/reducers/message-reducers.ts","BulletNote/reducers/index.ts","BulletNote/constants/context.ts","lib/customHooks/useInput.ts","BulletNote/components/InputPart/InputPart.tsx","BulletNote/containers/InputPart/InputPartContainer.tsx","BulletNote/actions/message-actions.ts","BulletNote/components/DownloadMessageList.tsx","BulletNote/functions/handleUploadData.ts","BulletNote/components/RestoreBackup.tsx","BulletNote/functions/handleMessageListToMessageWithDateList.ts","BulletNote/components/DateTitle.tsx","BulletNote/functions/handleTagSortMessage.ts","BulletNote/functions/useToggle.ts","BulletNote/containers/NotePart/StarItemContainer.tsx","BulletNote/containers/NotePart/PinItemContainer.tsx","BulletNote/components/MessageItemButtons.tsx","BulletNote/components/MessageComponents/MessageButtonsPart.tsx","BulletNote/components/BulletTagItem.tsx","BulletNote/components/BullteTagList.tsx","BulletNote/components/MessageComponents/MessageContentPart.tsx","BulletNote/components/BasicMessageItem.tsx","BulletNote/containers/BasicMessageItemContainer.tsx","BulletNote/components/wrappers/MessageItemWrapper.tsx","BulletNote/containers/wrappers/MessageItemWrapperContainer.tsx","BulletNote/components/TodoMessageItem.tsx","BulletNote/containers/NotePart/TodoMessageItemContainer.tsx","BulletNote/components/DefaultMessageItem.tsx","BulletNote/functions/switchMessagesByType.tsx","BulletNote/components/TagNoteBlockItem.tsx","BulletNote/config.ts","BulletNote/containers/NotePart/TagNoteBlockItemContainer.tsx","BulletNote/components/NoteBlockItem.tsx","BulletNote/functions/checkDateIsToday.ts","BulletNote/components/NoteBlockList.tsx","BulletNote/functions/useScrollToView.ts","BulletNote/containers/NoteBlockListContainer.tsx","BulletNote/components/NotePart/PinMessageList.tsx","BulletNote/containers/NotePart/PinMessageListContainer.tsx","BulletNote/components/NotePart/NotePart.tsx","BulletNote/containers/NotePart/NotePartContainer.tsx","BulletNote/functions/firebase/config.ts","BulletNote/functions/firebase/readFromDB.ts","BulletNote/functions/SignAndLog/checkIsSignIn.ts","BulletNote/functions/firebase/writeToDB.ts","BulletNote/containers/SyncToFirebase.tsx","BulletNote/components/CommonComponents/NavBar.tsx","BulletNote/components/CommonComponents/UserNotFoundPage.tsx","BulletNote/BulletNotePage.tsx","BulletNote/containers/Redirect.tsx","lib/customHooks/useForm.tsx","BulletNote/functions/SignAndLog/handleLogInToFirebase.ts","BulletNote/containers/LoginPart.tsx","BulletNote/components/CommonComponents/NotFoundPage.tsx","BulletNote/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BulletNoteActionTypes","MESSAGE_TYPE","HandleParseMessage","str","replace","messageParams","tagList","createdAt","handledTagList","createdAtTime","Date","length","this","defaultTag","dateTagList","todoMessageStatus","_tagName","tagName","removeSpaceInStr","id","name","rawMessage","matchedRes","match","tagReg","map","r","getTagItem","isTodoType","todoReg","reviewReg","DEFAULT","TODO","res","removeReviewPresetReg","singleRawMessageFromDB","isDone","isPin","messageType","getMessageType","getTagListFromRawMessage","content","getRemovedTypeAndTagsMessage","message","makeBasicMessage","status","makeTodoStatus","type","HandleDataInLocalStorage","messageList","m","undefined","isStared","rawMessageList","convertMessageListToRawMessageList","dataStr","JSON","stringify","localStorage","setItem","data","getItem","parse","inputPartReducers","state","action","newMessageList","ADD_MESSAGE","lastMessageId","Number","slice","newId","String","handledMessage","convertRawMessageToMessageItem","payload","SET_MESSAGE_FROM_DB","rawMessageFromDBList","DELETE_MESSAGE","filter","TOGGLE_MESSAGE_ISDONE","index","findIndex","TOGGLE_MESSAGE_ISSTAR","isStar","TOGGLE_MESSAGE_ISPIN","EDIT_MESSAGE","newMessage","tagsStr","t","join","console","log","setData","reducers","combineReducers","initState","ContextValueFn","createContextValueFn","ContextStore","createContextStore","ContextWrapper","ContextWrapperFn","useInput","useState","value","setVal","handleChange","useCallback","e","target","InputPart","props","onChange","onSendMessage","Box","display","paddingTop","TextField","autoFocus","variant","fullWidth","paddingLeft","Button","onClick","InputPartContainerWithCtx","connectCtx","dispatch","addMessageFn","addMessage","handleSendMessage","useFnsByKeyCode","lastIndex","confirmFn","escapeFn","DownloadMessageListWithCtx","dataFromLS","getData","timeStamp","toLocaleString","href","encodeURIComponent","download","handleUploadData","getHandledDataFn","reader","FileReader","files","readAsText","addEventListener","result","handledRes","RestoreBackup","HandleMessageList","date","toLocaleDateString","date1","date2","regDateToString","_messageList","noteBlockIndex","messageWithDateList","i","messageItem","checkTwoDateIsSame","removeYearRegExp","DateTitle","dateWithoutYear","Typography","HandleTagSortMessage","strList","newStr","includes","newStrList","checkNewStrIsInStrList","addNewStrToStrList","singleMessage","tags","tagNoteBlockObj","singleMessageTags","getTagNamesFromMessage","addNewStrListToStrList","checkNewStrListIsInStrList","newTag","tagTitle","useToggle","init","toggle","setToggle","handleToggle","s","useEffect","StarItemContainer","style","cursor","Star","StarBorder","PinItemContainer","isPined","Flag","FlagOutlined","MessageItemButtons","onDelete","Delete","useStyles","makeStyles","theme","root","breakpoints","down","morePart","position","opacity","top","right","width","MessageButtonsPart","classes","alignItems","className","MoreHoriz","Paper","onStarMessage","onPinMessage","backgroundColor","borderRadius","spacing","BulletTagItem","paddingRight","BulletTagList","key","MessageContentPart","React","isEditing","setEdit","onDoubleClick","onBlur","onEditMessage","color","hour","getHours","min","getMinutes","BasicMessageItem","Grid","container","item","xs","BasicMessageItemContainerWithCtx","editActionFn","editMessage","starActionFn","toggleMessageIsStar","pinActionFn","toggleMessageIsPin","handleEdit","handleToggleStarMessage","handleTogglePinMessage","MessageItemWrapper","children","MessageItemWrapperContainerWithCtx","deleteMessage","handleDelete","window","confirm","TodoMessageItem","Checkbox","onToggleTodo","checked","TodoMessageItemContainerWithCtx","toggleTodoActionFn","toggleMessageIsDone","handleToggleTodo","DefaultMessageItem","KeyboardArrowRight","switchMessagesByType","messageItemProps","TagNoteBlockItem","TagNoteBlockItemContainer","borderColor","selected","borderWidth","borderStyle","NoteBlockItem","getTagNoteBlockObj","Object","keys","padding","paddingBottom","checkDateIsToday","NoteBlockList","moveToBottomFn","messageListWithDate","convertToMessageWithDateList","bottom","Fab","size","ArrowDownward","useScrollToView","ref","useRef","handleScrollToView","current","scrollIntoView","block","NoteBlockListContainer","RootRef","rootRef","PinMessageList","isShowPinMessageList","toggleShowPinMessageListFn","filteredPinMessageList","filterPinedMessageList","elevation","zIndex","Divider","PinMessageListContainer","pinMessageListPart","maxHeight","overflow","boxShadow","NotePart","NotePartContainerWithCtx","setMessageFromDB","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firebasePath","userId","readFromDB","successCb","errorCb","path","once","then","snapshot","val","catch","err","checkIsSignIn","cb","auth","onAuthStateChanged","user","isSignedIn","writeWholeDataToDB","uid","set","finally","SyncToFirebaseWithCtx","useParams","jsonizedData","loading","setLoading","error","setErr","syncSuccess","setSuccess","handleSyncSuccess","handleSyncData","timeout","setTimeout","syncTimeout","clearTimeout","CircularProgress","NavBar","isOffline","justifyContent","height","UserNotFoundPage","errorMessage","notePart","inputPart","left","BulletNotePage","setError","setOffline","handleSetFirebaseDataToLS","_userId","rawData","setDataFromRawData","LSdata","isHaveLSdata","customInitState","Container","Redirect","history","useHistory","signInRes","push","useForm","initForm","form","setForm","handleChangeForm","persist","nameValue","validateFn","getMessageFn","changeForm","handleLogInToFirebase","email","password","signInWithEmailAndPassword","credential","LoginPart","label","handleLogIn","textAlign","NotFoundPage","BulletNote","basename","process","exact","component","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c63d28b.chunk.js","sourcesContent":["import InputPartActions from \"./message-actions\";\n\nexport enum BulletNoteActionTypes {\n  ADD_MESSAGE = 'ADD_MESSAGE',\n  DELETE_MESSAGE = 'DELETE_MESSAGE',\n  SET_MESSAGE_FROM_DB = 'SET_MESSAGE_FROM_DB',\n\n  TOGGLE_MESSAGE_ISDONE = 'TOGGLE_MESSAGE_ISDONE',\n  TOGGLE_MESSAGE_ISSTAR = 'TOGGLE_MESSAGE_ISSTAR',\n  TOGGLE_MESSAGE_ISPIN = 'TOGGLE_MESSAGE_ISPIN',\n\n  EDIT_MESSAGE = 'EDIT_MESSAGE',\n  EDIT_IT = 'EDIT_IT',\n}\n\ntype BulletNoteActions = InputPartActions\n\nexport default BulletNoteActions;","import { ID, Callback } from \"common-types\";\nimport { ToDoMessageItemProps, UrgentMessageItemProps, DefaultMessageItemProps, ToggleTodoFn } from \"./components/types\";\n\ntype RawMessage = string\n\nexport enum MESSAGE_TYPE  {\n  'DEFAULT' = 'DEFAULT',\n  'URGENT' = 'URGENT',\n  'TODO' = 'TODO',\n  'REVIEW' = 'REVIEW',\n}\n\nexport interface TagItem {\n  id: ID\n  name: string\n}\n\nexport interface BulletTagItemProps {\n  tagName: string\n}\n\nexport interface BulletTagListProps {\n  tagList: TagItem[]\n}\n\nexport interface DateTagItem {\n    date: Date\n  }\n\nexport interface UrgentMessageStatus {\n    dueTime: Date\n    urgentLevel: number\n    name: string\n  }\n\nexport interface TodoMessageStatus {\n  name: string\n  isDone?: boolean\n  dueTime?: Date | string\n}\n\nexport interface SingleRawMessageFromDB {\n  id: string\n  isDone?: boolean\n  isPin?: boolean\n  isStared?: boolean\n  rawMessage: RawMessage\n  createdAt?: string | Date\n}\n\nexport interface BasicMessage {\n  id: string\n  isStared?: boolean\n  isPin?: boolean\n  rawMessage: RawMessage\n  content: string\n  tagList: TagItem[]\n  createdAt: Date | string\n  dateTagList: DateTagItem[]\n}\n\nexport type MessageItem = \n  ToDoMessageItemProps | \n  UrgentMessageItemProps | \n  DefaultMessageItemProps\n\nexport type MessageList = MessageItem[]\n\nexport interface MessageListWithDate {\n    date: Date | string\n    messageList: MessageList\n  }\n\nexport interface NoteBlockItemProps extends MessageListWithDate {\n  selected?: boolean\n}\n\nexport interface TagNoteBlockItem {\n  tagTitle: string\n  messageList: MessageList\n}\nexport interface TagNoteBlockItemProps extends TagNoteBlockItem {\n}\nexport type TagNoteBlockList = TagNoteBlockItem[]\nexport interface TagNoteBlockObj {\n  [x: string]: TagNoteBlockItem\n}\n\nexport interface TagNoteBlockItemProps extends TagNoteBlockItem {}\nexport interface TagNoteBlockListProps {\n  tagNoteBlockList: TagNoteBlockList\n}\n\nexport interface NoteBlockListProps {\n    messageList: MessageList\n    moveToBottomFn: Callback\n  }\n\nexport interface DateTitleProps {\n    date: Date | string\n  }\n\n","import { MESSAGE_TYPE, TagItem, BasicMessage, TodoMessageStatus, MessageItem, SingleRawMessageFromDB } from \"../types\";\n\nclass HandleParseMessage {\n  static todoReg = /(\\[\\]\\s)?/\n  static reviewReg = /(\\*(\\s)?)+([\\u4E00-\\u9FFF]|\\w)+/g\n  static removeReviewPresetReg = /(\\*(\\s))/g\n  static tagReg = /#\\w+(\\s)?/g\n  static defaultTag: TagItem = {\n    id: 'notDefinedTag',\n    name: '#未分類'\n  }\n\n  static removeSpaceInStr(str: string) {\n    return str.replace(/\\s/g, '');\n  }\n\n  static makeBasicMessage(messageParams: {\n    id: string, \n    content: string, \n    tagList: TagItem[], \n    rawMessage: string\n    createdAt?: Date | string,\n    isStared?: boolean,\n    isPin?: boolean,\n  }): BasicMessage {\n    const {\n      tagList,\n      createdAt,\n    } = messageParams;\n    \n    let handledTagList = tagList;\n    const createdAtTime = createdAt ? new Date(createdAt) : new Date();\n    if(tagList.length === 0) {\n      handledTagList = [this.defaultTag];\n    }\n\n    return ({\n      ...messageParams,\n      tagList: handledTagList,\n      createdAt: createdAtTime,\n      dateTagList: [],\n    });\n  }\n\n  static makeTodoStatus(todoMessageStatus: TodoMessageStatus): TodoMessageStatus {\n    return ({\n      ...todoMessageStatus\n    });\n  }\n\n  static getTagItem(_tagName: string): TagItem {\n    const tagName = this.removeSpaceInStr(_tagName);\n    return ({\n      id: tagName,\n      name: tagName,\n    });\n  }\n\n  static getTagListFromRawMessage(rawMessage: string): TagItem[] {\n    const matchedRes = rawMessage.match(this.tagReg);\n    if(!!matchedRes) {\n      return matchedRes.map(r => this.getTagItem(r));\n    }\n    return [];\n  }\n\n  static getMessageType(rawMessage: string) {\n    const isTodoType = rawMessage.match(this.todoReg);\n    const isReviewType = rawMessage.match(this.reviewReg);\n    // console.log(isTodoType, isReviewType);\n\n    if(isReviewType) {\n      return MESSAGE_TYPE.DEFAULT;\n    }\n\n    if(isTodoType) {\n      return MESSAGE_TYPE.TODO;\n    }\n    // else if(isReviewType) {\n    //   return MESSAGE_TYPE.REVIEW;\n    // }\n    // return MESSAGE_TYPE.DEFAULT; \n  }\n\n  static getRemovedTypeAndTagsMessage(rawMessage: string): string {\n    let res = rawMessage;\n    res = res.replace(this.tagReg, '');\n    res = res.replace(this.todoReg, '');\n    res = res.replace(this.removeReviewPresetReg, '');\n    return res;\n  }\n\n  static convertRawMessageToMessageItem(\n    singleRawMessageFromDB: SingleRawMessageFromDB\n  ): MessageItem {\n    const {\n      isDone,\n      isPin,\n      rawMessage,\n    } = singleRawMessageFromDB;\n\n    const messageType = this.getMessageType(rawMessage);\n    const tagList = this.getTagListFromRawMessage(rawMessage);\n    const content = this.getRemovedTypeAndTagsMessage(rawMessage);\n    const message = this.makeBasicMessage({\n      ...singleRawMessageFromDB,\n      isPin,\n      tagList,\n      content,\n    });\n    \n    const status = this.makeTodoStatus({\n      name: '',\n      isDone: !!isDone,\n    });\n\n    switch (messageType) {\n    case MESSAGE_TYPE.TODO: {\n      return ({\n        type: MESSAGE_TYPE.TODO,\n        status,\n        message,\n      });\n    }\n    default:\n      return ({\n        type: MESSAGE_TYPE.DEFAULT,\n        status,\n        message,\n      });\n    }\n  }\n}\n\nexport default HandleParseMessage;","import { MessageList, SingleRawMessageFromDB, MESSAGE_TYPE } from \"../types\";\n\nconst messageListLS = 'messageListLS';\n\nclass HandleDataInLocalStorage {\n  static convertMessageListToRawMessageList(messageList: MessageList): SingleRawMessageFromDB[] {\n    return messageList.map(m => {\n      let isDone = undefined;\n      if(m.type === MESSAGE_TYPE.TODO) {\n        isDone = !!m.status.isDone;\n      }\n      return ({\n        id: m.message.id,\n        isDone,\n        rawMessage: m.message.rawMessage,\n        createdAt: new Date(m.message.createdAt),\n        isStared: m.message.isStared,\n        isPin: m.message.isPin,\n      });\n    });\n  }\n\n  static setData(messageList: MessageList) {\n    const rawMessageList = this.convertMessageListToRawMessageList(\n      messageList,\n    );\n    const dataStr = JSON.stringify(rawMessageList);\n    localStorage.setItem(messageListLS, dataStr);\n  }\n\n  static setDataFromRawData(rawMessageList: SingleRawMessageFromDB[]) {\n    const dataStr = JSON.stringify(rawMessageList);\n    localStorage.setItem(messageListLS, dataStr);\n  }\n\n  static getData(): SingleRawMessageFromDB[] {\n    const data = localStorage.getItem(messageListLS);\n    if(data) {\n      return JSON.parse(data);\n    }\n    return [];\n  };\n}\n\nexport default HandleDataInLocalStorage;","import { BulletNoteState } from \"../constants/context\";\nimport InputPartActions from \"../actions/message-actions\";\nimport { BulletNoteActionTypes } from \"../actions\";\nimport HandleParseMessage from \"../functions/handleParseMessage\";\nimport HandleDataInLocalStorage from \"../functions/HandleDataInLocalStorage\";\nimport { MESSAGE_TYPE, MessageItem } from \"../types\";\nimport { ToDoMessageItemProps } from \"../components/types\";\n\nconst inputPartReducers = (state: BulletNoteState, action: InputPartActions): BulletNoteState['messageList'] => {\n  let newMessageList = [...state.messageList];\n\n  switch (action.type) {\n  case BulletNoteActionTypes.ADD_MESSAGE: {\n    const {\n      messageList\n    } = state;\n    const lastMessageId = messageList.length === 0 ? (\n      -1\n    ): Number(messageList.slice(-1)[0].message.id);\n    const newId = String(lastMessageId + 1);\n    \n    const handledMessage = HandleParseMessage\n      .convertRawMessageToMessageItem({\n        id: newId,\n        rawMessage: action.payload.rawMessage\n      });\n    newMessageList = [\n      ...state.messageList,\n      handledMessage,\n    ];\n    break;\n  }\n\n  case BulletNoteActionTypes.SET_MESSAGE_FROM_DB: {\n    const {\n      rawMessageFromDBList\n    } = action.payload;\n    const messageList = rawMessageFromDBList.map((r) => (\n      HandleParseMessage.convertRawMessageToMessageItem(r)\n    ));\n    newMessageList = messageList;\n    break;\n  }\n\n  case BulletNoteActionTypes.DELETE_MESSAGE: {\n    const {\n      id\n    } = action.payload;\n    newMessageList = state.messageList.filter(m => {\n      return id !== m.message.id;\n    });\n    break;\n  }\n\n  case BulletNoteActionTypes.TOGGLE_MESSAGE_ISDONE: {\n    const {\n      id,\n      isDone\n    } = action.payload;\n\n    const index = newMessageList.findIndex((m) => m.message.id === id);\n    if(index !== -1) {\n      if(newMessageList[index].type === MESSAGE_TYPE.TODO) {\n        newMessageList[index] = {\n          ...newMessageList[index],\n          status: {\n            ...newMessageList[index].status,\n            isDone: isDone,\n          }\n        } as ToDoMessageItemProps;\n      }\n    }\n    break;\n  }\n\n  case BulletNoteActionTypes.TOGGLE_MESSAGE_ISSTAR: {\n    const {\n      id,\n      isStar\n    } = action.payload;\n    // console.log(id,\n    //   isStar);\n\n    const index = newMessageList.findIndex((m) => m.message.id === id);\n    if(index !== -1) {\n      newMessageList[index] = {\n        ...newMessageList[index],\n        message: {\n          ...newMessageList[index].message,\n          isStared: isStar\n        }\n      };\n    }\n    break;\n  }\n\n  case BulletNoteActionTypes.TOGGLE_MESSAGE_ISPIN: {\n    const {\n      id,\n      isPin\n    } = action.payload;\n\n    const index = newMessageList.findIndex((m) => m.message.id === id);\n    if(index !== -1) {\n      newMessageList[index] = {\n        ...newMessageList[index],\n        message: {\n          ...newMessageList[index].message,\n          isPin,\n        }\n      };\n    }\n    break;\n  }\n  \n  case BulletNoteActionTypes.EDIT_MESSAGE: {\n    const {\n      id,\n      newMessage\n    } = action.payload;\n\n    const index = newMessageList.findIndex((m) => m.message.id === id);\n    if(index !== -1) {\n      const tagsStr = newMessageList[index].message.tagList.map(t => {\n        if(t.id === HandleParseMessage.defaultTag.id) return '';\n        return t.name;\n      }).join(' ');\n      newMessageList[index] = {\n        ...newMessageList[index],\n        message: {\n          ...newMessageList[index].message,\n          content: newMessage,\n          rawMessage: newMessage + ' ' + tagsStr,\n        }\n      };\n        \n      console.log(newMessageList[index].message.tagList);\n    }\n    break;\n  }\n\n  default:\n    break;\n  }\n  \n  HandleDataInLocalStorage.setData(newMessageList);\n  return newMessageList;\n};\n\nexport default inputPartReducers;","import { combineReducers } from \"react-function-helpers\";\nimport { BulletNoteState } from \"../constants/context\";\nimport inputPartReducers from \"./message-reducers\";\n\nconst reducers = combineReducers<BulletNoteState>({\n  messageList: inputPartReducers,\n});\n\nexport default reducers;","import { MessageList } from \"../types\";\nimport { createContextValueFn, createContextStore } from \"react-function-helpers/lib/functions/contextHelpers\";\nimport reducers from \"../reducers\";\nimport ContextWrapperFn from \"react-function-helpers/lib/functions/ContextWrapper\";\n\nexport interface BulletNoteConfig {\n  showTagList: boolean\n  showDate: boolean\n}\n\nexport interface BulletNoteState {\n  messageList: MessageList\n}\n\nconst initState: BulletNoteState = {\n  messageList: []\n};\n\nconst ContextValueFn  = createContextValueFn(initState, reducers);\n\nexport const ContextStore = createContextStore(initState);\n\nexport const ContextWrapper = ContextWrapperFn(ContextValueFn, ContextStore);\n\nexport default ContextWrapper;\n","import { useState, useCallback, ChangeEvent } from \"react\";\n\nconst useInput = () => {\n  const [value, setVal] = useState('');\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setVal(value);\n  }, []);\n\n  return ({\n    handleChange,\n    value,\n    setVal\n  });\n};\n\nexport default useInput;","import React from 'react';\nimport { Box, TextField, Button } from '@material-ui/core';\nimport { InputPartProps } from './types';\n\nconst InputPart = (props: InputPartProps) => {\n  const {\n    value,\n    onChange,\n    onSendMessage\n  } = props;\n\n  return (\n    <Box display={'flex'} paddingTop={1}>\n      <TextField\n        autoFocus={true}\n        variant={'outlined'}\n        fullWidth={true}\n        value={value}\n        onChange={onChange} />\n      <Box paddingLeft={1}>\n        <Button onClick={onSendMessage}>\n          {'send'}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default InputPart;","import React, { useCallback } from 'react';\nimport { Box } from '@material-ui/core';\nimport useInput from 'lib/customHooks/useInput';\nimport InputPart from 'BulletNote/components/InputPart/InputPart';\nimport { MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { InputPartContainerProps } from '../types';\nimport { addMessage } from 'BulletNote/actions/message-actions';\nimport { connectCtx } from 'react-function-helpers';\nimport { ContextStore } from '../../constants/context';\nimport { useFnsByKeyCode } from 'react-function-helpers/lib/lib/customHooks/useFnsByKeyCode';\n\nconst InputPartContainer = (props: InputPartContainerProps) => {\n  const {\n    value,\n    setVal,\n    handleChange,\n  } = useInput();\n\n  const handleSendMessage = useCallback(() => {\n    if(value.length > 0) {\n      props.addMessageFn(value);\n      setVal('');\n    }\n  }, [props, setVal, value]);\n\n  useFnsByKeyCode({\n    lastIndex: 0,\n    confirmFn: handleSendMessage,\n    escapeFn: () => {}\n  }); \n\n  return (\n    <InputPart\n      value={value}\n      onChange={handleChange}\n      onSendMessage={handleSendMessage} />\n  );\n};\n\ninterface OwnProps {}\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, InputPartContainerProps> = (dispatch) => {\n  return ({\n    addMessageFn: (rawMessage: string) => {\n      const action = addMessage(rawMessage);\n      dispatch(action);\n    }\n  });\n};\n\nconst InputPartContainerWithCtx = connectCtx(ContextStore)(undefined, mapDispatchToProps)(InputPartContainer);\n\nexport default InputPartContainerWithCtx;","import { BulletNoteActionTypes } from \".\";\nimport { SingleRawMessageFromDB } from \"../types\";\n\ninterface AddMessageActionPayload {\n  rawMessage: string\n}\ninterface SetMessageFromDB {\n  rawMessageFromDBList: SingleRawMessageFromDB[]\n}\ninterface DeleteMessageActionPayload {\n  id: string\n}\ninterface ToggleMessageIsDonePayload {\n  id: string\n  isDone: boolean\n}\n\ninterface ToggleMessageIsStarPayload {\n  id: string\n  isStar: boolean | undefined\n}\n\ninterface ToggleMessageIsPinPayload {\n  id: string\n  isPin: boolean | undefined\n}\n\ninterface EditMessageActionPayload {\n  id: string\n  newMessage: string\n}\n\ninterface DeleteMessageAction {\n  type: BulletNoteActionTypes.DELETE_MESSAGE,\n  payload: DeleteMessageActionPayload\n}\ninterface AddMessageAction {\n  type: BulletNoteActionTypes.ADD_MESSAGE,\n  payload: AddMessageActionPayload\n}\ninterface SetMessageFromDBAction {\n  type: BulletNoteActionTypes.SET_MESSAGE_FROM_DB,\n  payload: SetMessageFromDB\n}\ninterface ToggleMessageIsDone {\n  type: BulletNoteActionTypes.TOGGLE_MESSAGE_ISDONE,\n  payload: ToggleMessageIsDonePayload\n}\ninterface ToggleMessageIsStar {\n  type: BulletNoteActionTypes.TOGGLE_MESSAGE_ISSTAR,\n  payload: ToggleMessageIsStarPayload\n}\n\ninterface ToggleMessageIsPin {\n  type: BulletNoteActionTypes.TOGGLE_MESSAGE_ISPIN,\n  payload: ToggleMessageIsPinPayload\n}\n\ninterface EditMessageAction {\n  type: BulletNoteActionTypes.EDIT_MESSAGE,\n  payload: EditMessageActionPayload\n}\n\nexport const addMessage = (rawMessage: string): AddMessageAction => ({\n  type: BulletNoteActionTypes.ADD_MESSAGE,\n  payload: {\n    rawMessage,\n  }\n});\n\nexport const setMessageFromDB = (rawMessageFromDBList: SingleRawMessageFromDB[]): SetMessageFromDBAction => ({\n  type: BulletNoteActionTypes.SET_MESSAGE_FROM_DB,\n  payload: {\n    rawMessageFromDBList,\n  }\n});\n\nexport const deleteMessage = (id: string): DeleteMessageAction => ({\n  type: BulletNoteActionTypes.DELETE_MESSAGE,\n  payload: { id }\n});\n\nexport const toggleMessageIsDone = (id: string, isDone: boolean): ToggleMessageIsDone => ({\n  type: BulletNoteActionTypes.TOGGLE_MESSAGE_ISDONE,\n  payload: {\n    id,\n    isDone,\n  }\n});\n\nexport const toggleMessageIsStar = (id: string, isStar?: boolean): ToggleMessageIsStar => ({\n  type: BulletNoteActionTypes.TOGGLE_MESSAGE_ISSTAR,\n  payload: {\n    id,\n    isStar,\n  }\n});\n\nexport const toggleMessageIsPin = (id: string, isPin?: boolean): ToggleMessageIsPin => ({\n  type: BulletNoteActionTypes.TOGGLE_MESSAGE_ISPIN,\n  payload: {\n    id,\n    isPin,\n  }\n});\n\nexport const editMessage = (id: string, newMessage: string): EditMessageAction => ({\n  type: BulletNoteActionTypes.EDIT_MESSAGE,\n  payload: { \n    id,\n    newMessage \n  },\n});\n\ntype InputPartActions = \n  AddMessageAction | \n  SetMessageFromDBAction | \n  DeleteMessageAction | \n  ToggleMessageIsDone | \n  EditMessageAction | \n  ToggleMessageIsStar |\n  ToggleMessageIsPin\n\nexport default InputPartActions;","import React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { DownloadMessageListProps } from './types';\nimport { MapStateToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { BulletNoteState, ContextStore } from '../constants/context';\nimport { connectCtx } from 'react-function-helpers';\nimport HandleDataInLocalStorage from 'BulletNote/functions/HandleDataInLocalStorage';\n\nexport const getJSONFile = (data: any) => {\n  return `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(data))}`;\n};\n\nexport const getTimeStamp = () => new Date().toLocaleString();\n\nconst DownloadMessageList = (props: DownloadMessageListProps) => {\n  const dataFromLS = HandleDataInLocalStorage.getData();\n  const timeStamp = getTimeStamp();\n\n  return (\n    <Button\n      href={getJSONFile(dataFromLS)}\n      download={`bullet-note-backup-${timeStamp}.json`}\n    >\n      {'download backup'}\n    </Button>\n  );\n};\n\nconst mapStateToProps: MapStateToProps<BulletNoteState, {}, {\n  messageList: DownloadMessageListProps['messageList']\n}> = (state) => {\n  return ({\n    messageList: state.messageList,\n  });\n};\n\nconst DownloadMessageListWithCtx = connectCtx(ContextStore)(mapStateToProps)(DownloadMessageList);\n\nexport default DownloadMessageListWithCtx;","import { Callback } from \"common-types\";\nimport { ChangeEvent } from \"react\";\n\nconst handleUploadData = (getHandledDataFn?: Callback) => {\n  return (e: ChangeEvent<HTMLInputElement>) => {\n    let reader = new FileReader();\n\n    if(e.target.files && e.target.files.length > 0) {\n      console.log(e.target.files[0]);\n      reader.readAsText(e.target.files[0]);\n    }\n\n    reader.addEventListener('load', (e) => {\n      if(e.target && e.target.result && typeof e.target.result === 'string') {\n        const handledRes = JSON.parse(e.target.result);\n        console.log(handledRes);\n        getHandledDataFn && getHandledDataFn(handledRes);\n      }\n    });\n  };\n\n};\n\nexport default handleUploadData;","import React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { read } from 'fs';\nimport handleUploadData from '../functions/handleUploadData';\n\nconst RestoreBackup = () => {\n  return (\n    <input type={'file'} onChange={handleUploadData()} />\n  );\n};\n\nexport default RestoreBackup;","import { MessageList, NoteBlockItemProps } from \"../types\";\n\nclass HandleMessageList {\n  static regDateToString(date: Date | string) {\n    const dateObj = new Date(date);\n    return dateObj.toLocaleDateString();\n  }\n\n  static checkTwoDateIsSame(date1: Date | string, date2: Date | string) {\n    if(!date1 || !date2) {\n      return false;\n    }\n    // console.log(date1, date2);\n    const date1Str = this.regDateToString(date1);\n    const date2Str = this.regDateToString(date2);\n    return date1Str === date2Str;\n  }\n\n  static convertToMessageWithDateList(_messageList: MessageList) : NoteBlockItemProps[] {\n    let date: string | Date = '';\n    let noteBlockIndex = -1;\n    let messageWithDateList: NoteBlockItemProps[] = [{\n      date,\n      messageList: [],\n    }];\n    \n    for (let i = 0; i < _messageList.length; i++) {\n      const messageItem = _messageList[i];\n      const createdAt = messageItem.message.createdAt;\n      const dateIsSame = this.checkTwoDateIsSame(createdAt, date);\n      if(!dateIsSame) {\n        date = createdAt;\n        noteBlockIndex += 1;\n      }\n      messageWithDateList[noteBlockIndex] = {\n        date,\n        messageList: [\n          ...(\n            messageWithDateList[noteBlockIndex] ? messageWithDateList[noteBlockIndex].messageList : []\n          ),\n          messageItem,\n        ]\n      };\n    }\n  \n    return messageWithDateList;\n  };\n}\n\nexport default HandleMessageList;","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport { DateTitleProps } from '../types';\n\nconst removeYearRegExp = /^(\\d+\\/)/g;\n\nconst DateTitle = (props: DateTitleProps) => {\n  const dateTitle = (new Date(props.date)).toLocaleDateString();\n  const dateWithoutYear = dateTitle.replace(removeYearRegExp, '');\n  return (\n    <Typography variant={'h5'}>\n      {dateWithoutYear}\n    </Typography>\n  );\n};\n\nexport default DateTitle;","import { MessageList, TagNoteBlockList, TagNoteBlockItem, MessageItem, TagNoteBlockObj } from \"../types\";\n\nclass HandleTagSortMessage {\n  static checkNewStrIsInStrList(strList: string[], newStr: string) {\n    return strList.includes(newStr);\n  }\n\n  static checkNewStrListIsInStrList(strList: string[], newStrList: string[]) {\n    if(newStrList.length === 0) {\n      return true;\n    }\n    for (let i = 0; i < newStrList.length; i++) {\n      const str = newStrList[i];\n      const isInList = this.checkNewStrIsInStrList(strList, str);\n      if(isInList) {\n        return true;\n      };\n    }\n    return false;\n  }\n\n  static addNewStrToStrList(strList: string[], newStr: string) {\n    const isIncludes = this.checkNewStrIsInStrList(strList, newStr);\n    if(isIncludes) {\n      return strList;\n    }\n    return [\n      ...strList,\n      newStr,\n    ];\n  }\n\n  static addNewStrListToStrList(strList: string[], newStrList: string[]) {\n    let res = strList;\n    for (let i = 0; i < newStrList.length; i++) {\n      const str = newStrList[i];\n      res = this.addNewStrToStrList(res, str);\n    }\n    return res;\n  }\n\n  static getTagNamesFromMessage(singleMessage: MessageItem) {\n    return singleMessage.message.tagList.map(\n      t => t.name\n    );\n  }\n\n  static getTagNoteBlockObj(_messageList: MessageList) {\n    let tags: string[] = [];\n    let tagNoteBlockObj: TagNoteBlockObj = {};\n    \n    for (let i = 0; i < _messageList.length; i++) {\n      const singleMessage = _messageList[i];\n      const singleMessageTags = this.getTagNamesFromMessage(singleMessage);\n      tags = this.addNewStrListToStrList(tags, singleMessageTags);\n      const isNewTagsInTags = this.checkNewStrListIsInStrList(tags, singleMessageTags);\n\n      if(singleMessageTags.length > 0) {\n        const newTag = singleMessageTags[0];\n\n        if(tagNoteBlockObj[newTag]) {\n          tagNoteBlockObj[newTag] = {\n            ...tagNoteBlockObj[newTag],\n            messageList: [\n              ...tagNoteBlockObj[newTag].messageList,\n              singleMessage,\n            ]\n          };\n        } else {\n          tagNoteBlockObj[newTag] = {\n            tagTitle: newTag,\n            messageList: [\n              singleMessage,\n            ]\n          };\n        }\n      }\n    }\n    return tagNoteBlockObj;\n  }\n\n\n}\n\nexport default HandleTagSortMessage;","import { useState, useEffect, useCallback } from \"react\";\nimport { Callback } from \"common-types\";\n\nconst useToggle = (init?: boolean, onChange?: Callback) => {\n  const [toggle, setToggle] = useState(!!init);\n\n  const handleToggle = useCallback(() => {\n    setToggle(s => !s);\n  }, []);\n\n  useEffect(() => {\n    onChange && onChange(toggle);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggle]);\n\n  useEffect(() => {\n    setToggle(!!init);\n  }, [init]);\n\n  return ({\n    toggle,\n    setToggle,\n    handleToggle,\n  });\n};\n\nexport default useToggle;","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box } from '@material-ui/core';\nimport { Star, StarBorder } from '@material-ui/icons';\nimport { StarItemContainerProps } from '../types';\nimport useToggle from 'BulletNote/functions/useToggle';\n\nconst StarItemContainer = ({\n  onChange,\n  isStared,\n}: StarItemContainerProps) => {\n  const {\n    toggle: isStar,\n    handleToggle,\n  } = useToggle(isStared, onChange);\n\n  return (\n    <Box\n      style={{\n        cursor: 'pointer',\n      }}\n      onClick={handleToggle}\n    >\n      {isStar ? (\n        <Star />\n      ) : (\n        <StarBorder />\n      )}\n    </Box>\n  );\n};\n\nexport default StarItemContainer;","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport useToggle from 'BulletNote/functions/useToggle';\nimport { PinItemContainerProps } from '../types';\nimport { Flag, FlagOutlined } from '@material-ui/icons';\n\nconst PinItemContainer = ({\n  isPin,\n  onChange\n}: PinItemContainerProps) => {\n  const {\n    toggle: isPined,\n    handleToggle\n  } = useToggle(isPin, onChange);\n\n  return (\n    <Box\n      style={{\n        cursor: 'pointer',\n      }}\n      onClick={handleToggle}\n    >\n      {isPined ? (\n        <Flag />\n      ) : (\n        <FlagOutlined />\n      )}\n    </Box>\n  );\n};\n\nexport default PinItemContainer;","import React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport { MessageItemButtonsProps } from './types';\n\nconst MessageItemButtons = (props: MessageItemButtonsProps) => {\n  return (\n    <Box>\n      <Button onClick={props.onDelete}>\n        <Delete />\n      </Button>\n    </Box>\n  );\n};\n\nexport default MessageItemButtons;","import React from 'react';\nimport { Box, makeStyles, Paper } from '@material-ui/core';\nimport StarItemContainer from 'BulletNote/containers/NotePart/StarItemContainer';\nimport PinItemContainer from 'BulletNote/containers/NotePart/PinItemContainer';\nimport MessageItemButtons from '../MessageItemButtons';\nimport { MessageButtonsPartProps } from './types';\nimport { MoreHoriz } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.down('md')]: {\n       \n    }\n  },\n  morePart: {\n    position: 'relative',\n    cursor: 'pointer',\n    opacity: 0.8,\n\n    '& > div': {\n      position: 'absolute',\n      top: -30,\n      right: 0,\n      width: 110,\n      display: 'none',\n    },\n    '&:hover > div': {\n      display: 'flex',\n    }\n  }\n}));\n\nconst MessageButtonsPart = (props: MessageButtonsPartProps) => {\n  const classes = useStyles();\n  const {\n    message, \n  } = props;\n\n  const {\n    isStared,\n    isPin,\n  } = message;\n\n  return (\n    <Box\n      position={'relative'}\n      display={'flex'} \n      alignItems={'center'} \n    >\n      <Box\n        className={classes.morePart}\n      >\n        <MoreHoriz />\n        <Paper>\n          <Box\n            display={'flex'} \n            alignItems={'center'}\n          >\n            <MessageItemButtons\n              onDelete={props.onDelete} />\n            <StarItemContainer\n              isStared={isStared}\n              onChange={props.onStarMessage} />\n            <PinItemContainer\n              isPin={isPin}\n              onChange={props.onPinMessage} />\n          </Box>\n        </Paper>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MessageButtonsPart;","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { BulletTagItemProps } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    cursor: 'pointer',\n    backgroundColor: '#aff',\n    borderRadius: theme.spacing(0.5),\n    '&:hover': {\n      opacity: 0.8,\n    }\n  }\n}));\n\nconst BulletTagItem = (props: BulletTagItemProps) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root} paddingLeft={0.5} paddingRight={0.5}>\n      {props.tagName}\n    </Box>\n  );\n};\n\nexport default BulletTagItem;","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { BulletTagListProps } from '../types';\nimport BulletTagItem from './BulletTagItem';\n\nconst BulletTagList = (props: BulletTagListProps) => {\n  return (\n    <Box display={'flex'} paddingLeft={0.5}>\n      {props.tagList.map((t, i) => (\n        <Box paddingRight={0.5}>\n          <BulletTagItem \n            key={i}\n            tagName={t.name} />\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default BulletTagList;","import React from 'react';\nimport { Box, Typography, TextField, Grid } from '@material-ui/core';\nimport BulletTagList from '../BullteTagList';\nimport { BasicMessageItemProps } from '../types';\n\nconst regDateToString = (date: Date | string) => {\n  if(typeof date === 'string') return date;\n  const hour = date.getHours();\n  const min = date.getMinutes();\n  // return '';\n  return `${hour}:${min}`;\n};\n\nconst MessageContentPart = (props: BasicMessageItemProps) => {\n  const {\n    content,\n    tagList,\n    createdAt,\n  } = props.message;\n\n  const [isEditing, setEdit] = React.useState(false);\n  \n  return (\n    <Box\n      display={'flex'} \n      alignItems={'center'}\n      onDoubleClick={() => setEdit(true)}\n      onBlur={() => setEdit(false)}\n    >\n      {isEditing ? (\n        <TextField \n          fullWidth={true}\n          onChange={props.onEditMessage}\n          autoFocus={true}\n          value={content} />\n      ) : (\n        <Typography \n          variant={'subtitle1'} \n        >\n          {content}\n        </Typography>\n      )}\n      <BulletTagList\n        tagList={tagList} />\n      <Typography variant={'body1'} color={'textSecondary'}>\n        {regDateToString(createdAt)}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default MessageContentPart;","import React from 'react';\nimport { Box, Typography, TextField, Grid } from '@material-ui/core';\nimport BulletTagList from './BullteTagList';\nimport { BasicMessageItemProps } from './types';\nimport MessageButtonsPart from './MessageComponents/MessageButtonsPart';\nimport MessageContentPart from './MessageComponents/MessageContentPart';\n\nconst BasicMessageItem = (props: BasicMessageItemProps) => {\n  return (\n    <Box \n      display={'flex'} \n      width={'100%'}\n    >\n      <Grid container>\n        <Grid item xs={11}>\n          <MessageContentPart \n            {...props} />\n        </Grid>\n        <Grid item xs={1}>\n          <MessageButtonsPart \n            {...props} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default BasicMessageItem;","import React, { useCallback, ChangeEvent } from 'react';\nimport { Box } from '@material-ui/core';\nimport BasicMessageItem from '../components/BasicMessageItem';\nimport { BasicMessageItemContainerProps, BasicMessageItemContainerWithCtxProps } from './types';\nimport { MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { editMessage, toggleMessageIsStar, toggleMessageIsPin } from '../actions/message-actions';\nimport { connectCtx } from 'react-function-helpers';\nimport { ContextStore } from '../constants/context';\n\nconst BasicMessageItemContainer = (props: BasicMessageItemContainerProps) => {\n  const {\n    editActionFn,\n    starActionFn,\n    pinActionFn,\n    message\n  } = props;\n  \n  const { id } = message;\n\n  const handleEdit = useCallback((e: ChangeEvent<any>) => {\n    const { value } = e.target;\n    editActionFn(id, value);\n  }, [editActionFn, id]);\n\n  const handleToggleStarMessage = useCallback((isStar: boolean | undefined) => {\n    starActionFn(id, isStar);\n  }, [id, starActionFn]);\n\n  const handleTogglePinMessage = useCallback((isPin: boolean | undefined) => {\n    pinActionFn(id, isPin);\n  }, [id, pinActionFn]);\n\n  return (\n    <BasicMessageItem\n      {...props}\n      onPinMessage={handleTogglePinMessage}\n      onStarMessage={handleToggleStarMessage}\n      onEditMessage={handleEdit} />\n  );\n};\n\ninterface OwnProps extends BasicMessageItemContainerWithCtxProps {}\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, {\n  editActionFn: BasicMessageItemContainerProps['editActionFn'],\n  starActionFn: BasicMessageItemContainerProps['starActionFn'],\n  pinActionFn: BasicMessageItemContainerProps['pinActionFn'],\n}> = (dispatch) => {\n  return ({\n    editActionFn: (id: string, newMessage: string) => {\n      const action = editMessage(id, newMessage);\n      dispatch(action);\n    },\n    starActionFn: (id, isStar) => {\n      const action = toggleMessageIsStar(id, isStar);\n      dispatch(action); \n    },\n    pinActionFn: (id, isPin) => {\n      const action = toggleMessageIsPin(id, isPin);\n      dispatch(action); \n    },\n  });\n};\n\nconst BasicMessageItemContainerWithCtx = connectCtx(ContextStore)(undefined, mapDispatchToProps)(BasicMessageItemContainer);\n\nexport default BasicMessageItemContainerWithCtx;","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { MessageItemWrapperProps } from '../types';\nimport BasicMessageItem from '../BasicMessageItem';\nimport BasicMessageItemContainerWithCtx from 'BulletNote/containers/BasicMessageItemContainer';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: '#eee',\n    }\n  }\n}));\n\n\nconst MessageItemWrapper = (props: MessageItemWrapperProps) => {\n  const classes = useStyles();\n  return (\n    <Box\n      display={'flex'} \n      alignItems={'center'} \n      className={classes.root}\n    >\n      {props.children}\n      <BasicMessageItemContainerWithCtx\n        {...props} />\n    </Box>\n  );\n};\n\nexport default MessageItemWrapper;  ","import React, { useCallback } from 'react';\nimport { Box } from '@material-ui/core';\nimport { MessageItemWrapperContainerProps, MessageItemWrapperContainerWithCtxProps } from '../types';\nimport MessageItemWrapper from 'BulletNote/components/wrappers/MessageItemWrapper';\nimport { MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { deleteMessage } from 'BulletNote/actions/message-actions';\nimport { connectCtx } from 'react-function-helpers';\nimport { ContextStore } from 'BulletNote/constants/context';\n\nconst MessageItemWrapperContainer = (props: MessageItemWrapperContainerProps) => {\n  const {\n    message,\n    onDelete\n  } = props;\n\n  const {\n    id,\n  } = message;\n\n  const handleDelete = useCallback(() => {\n    if(window.confirm('Are you sure delete?')) {\n      onDelete(id);\n    }\n  }, [id, onDelete]);\n\n  return (\n    <MessageItemWrapper\n      {...props}\n      onDelete={handleDelete} />\n  );\n};\n\ninterface OwnProps extends MessageItemWrapperContainerWithCtxProps {}\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, {\n  onDelete: MessageItemWrapperContainerProps['onDelete']\n}> = (dispatch) => {\n  return ({\n    onDelete: (id: string) => {\n      const action = deleteMessage(id);\n      dispatch(action);\n    }\n  });\n};\n\nconst MessageItemWrapperContainerWithCtx = connectCtx(ContextStore)(undefined, mapDispatchToProps)(MessageItemWrapperContainer);\n\nexport default MessageItemWrapperContainerWithCtx;","import React from 'react';\nimport { Checkbox } from '@material-ui/core';\nimport { ToDoMessageItemProps } from './types';\nimport MessageItemWrapperContainerWithCtx from '../containers/wrappers/MessageItemWrapperContainer';\n\nconst TodoMessageItem = (props: ToDoMessageItemProps) => {\n  return (\n    <MessageItemWrapperContainerWithCtx\n      {...props}>\n      <Checkbox\n        color={'primary'}\n        onChange={props.onToggleTodo}\n        checked={!!props.status.isDone} />\n    </MessageItemWrapperContainerWithCtx>\n  );\n};\n\nexport default TodoMessageItem;","import React, { useCallback } from 'react';\nimport { Box } from '@material-ui/core';\nimport { TodoMessageItemContainerProps, TodoMessageItemContainerWithCtxProps } from '../types';\nimport { MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport TodoMessageItem from 'BulletNote/components/TodoMessageItem';\nimport { toggleMessageIsDone } from 'BulletNote/actions/message-actions';\nimport { connectCtx } from 'react-function-helpers';\nimport { ContextStore } from 'BulletNote/constants/context';\n\nconst TodoMessageItemContainer = (props: TodoMessageItemContainerProps) => {\n  const {\n    message,\n    toggleTodoActionFn,\n  } = props;\n  const {\n    id\n  } = message;\n\n  const handleToggleTodo = useCallback((e: any, isDone: boolean) => {\n    return toggleTodoActionFn(id, isDone);\n  }, [id, toggleTodoActionFn]);\n\n  return (\n    <TodoMessageItem\n      {...props}\n      onToggleTodo={handleToggleTodo} />\n  );\n};\n\ntype OwnProps = TodoMessageItemContainerWithCtxProps\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, {\n  toggleTodoActionFn: TodoMessageItemContainerProps['toggleTodoActionFn']\n}> = (dispatch) => {\n  return ({\n    toggleTodoActionFn: (id: string, isDone: boolean) => {\n      const action = toggleMessageIsDone(id, isDone);\n      dispatch(action);\n    },\n  });\n};\n\nconst TodoMessageItemContainerWithCtx = connectCtx(ContextStore)(undefined, mapDispatchToProps)(TodoMessageItemContainer);\n\nexport default TodoMessageItemContainerWithCtx;","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { DefaultMessageItemProps } from './types';\nimport MessageItemWrapperContainerWithCtx from 'BulletNote/containers/wrappers/MessageItemWrapperContainer';\nimport { KeyboardArrowRight } from '@material-ui/icons';\n\nconst DefaultMessageItem = (props: DefaultMessageItemProps) => {\n  return (\n    <MessageItemWrapperContainerWithCtx\n      {...props}>\n      <KeyboardArrowRight />\n    </MessageItemWrapperContainerWithCtx>\n  );\n};\n\nexport default DefaultMessageItem;","import React from 'react';\nimport TodoMessageItem from '../components/TodoMessageItem';\nimport { MessageItem, MESSAGE_TYPE, TagNoteBlockItemProps } from '../types';\nimport TodoMessageItemContainerWithCtx from '../containers/NotePart/TodoMessageItemContainer';\nimport DefaultMessageItem from 'BulletNote/components/DefaultMessageItem';\n\nconst switchMessagesByType = ({\n  index, \n  messageItemProps,\n}: {\n  messageItemProps: MessageItem, \n  index: number,\n}) => {\n  switch (messageItemProps.type) {\n    \n  case MESSAGE_TYPE.TODO: {\n    return (\n      <TodoMessageItemContainerWithCtx\n        key={index}\n        {...messageItemProps}\n      />\n    );\n  }\n\n  case MESSAGE_TYPE.DEFAULT: {\n    return (\n      <DefaultMessageItem\n        key={index}\n        {...messageItemProps} />\n    );\n  }\n  \n  default:\n    return null;\n  }\n};\n\nexport default switchMessagesByType;","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport { TagNoteBlockItemProps } from '../types';\nimport switchMessagesByType from '../functions/switchMessagesByType';\nimport { tabSpace } from '../config';\n\nconst TagNoteBlockItem = (props: TagNoteBlockItemProps) => {\n  return (\n    <Box paddingLeft={tabSpace}>\n      <Typography variant={'h6'} color={'textPrimary'}>\n        {props.tagTitle}\n      </Typography>\n      <Box paddingLeft={tabSpace}>\n        {props.messageList.map((messageItemProps, index) => (\n          switchMessagesByType({\n            index,\n            messageItemProps,\n          })\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default TagNoteBlockItem;","export const tabSpace = 1.5;\n\nexport const logInParam = 'log-in';\nexport const offLineModeParam = 'off-line-mode';\n\nexport const syncTimeout = 5; //seconds","import React from 'react';\nimport TagNoteBlockItem from 'BulletNote/components/TagNoteBlockItem';\nimport { TagNoteBlockItemContainerProps } from '../types';\n\nconst TagNoteBlockItemContainer = (props: TagNoteBlockItemContainerProps) => {\n  return (\n    <TagNoteBlockItem\n      {...props} />\n  );\n};\n\nexport default TagNoteBlockItemContainer;","import React from 'react';\nimport { Box, makeStyles, Theme } from '@material-ui/core';\nimport { NoteBlockItemProps } from '../types';\nimport switchMessagesByType from '../functions/switchMessagesByType';\nimport DateTitle from './DateTitle';\nimport HandleTagSortMessage from '../functions/handleTagSortMessage';\nimport TagNoteBlockItem from './TagNoteBlockItem';\nimport TagNoteBlockItemContainerWithCtx from '../containers/NotePart/TagNoteBlockItemContainer';\n\nconst useStyles = makeStyles<Theme, NoteBlockItemProps>(theme => ({\n  root: {\n    borderRadius: 4,\n    borderColor: props => props.selected ? '#ddd' : 'transparent',\n    borderWidth: 2,\n    borderStyle: 'solid',\n  }\n}));\n\nconst NoteBlockItem = (props: NoteBlockItemProps) => {\n  const {\n    date,\n    messageList,\n  } = props;\n  const classes = useStyles(props);\n\n  const tagNoteBlockObj = HandleTagSortMessage.getTagNoteBlockObj(messageList);\n  const tags = Object.keys(tagNoteBlockObj);\n  \n  return (\n    <>\n      <Box padding={0.5} paddingBottom={2} className={classes.root}>\n        <Box paddingBottom={1}>\n          <DateTitle\n            date={date} />\n        </Box>\n        {tags.map((t, i) => (\n          <TagNoteBlockItemContainerWithCtx\n            key={i}\n            {...tagNoteBlockObj[t]} />\n        ))}\n      </Box>\n      {/* <hr /> */}\n    </>\n  );\n};\n\nexport default NoteBlockItem;","import HandleMessageList from \"./handleMessageListToMessageWithDateList\";\n\nconst checkDateIsToday = (date: Date | string) => {\n  const res = HandleMessageList.checkTwoDateIsSame(new Date(), date);\n  return res;\n};\n\nexport default checkDateIsToday;","import React from 'react';\nimport { Box, Typography, Fab } from '@material-ui/core';\nimport { NoteBlockListProps } from '../types';\nimport HandleMessageList from '../functions/handleMessageListToMessageWithDateList';\nimport NoteBlockItem from './NoteBlockItem';\nimport checkDateIsToday from '../functions/checkDateIsToday';\nimport { ArrowDownward } from '@material-ui/icons';\n\nconst NoteBlockList = (props: NoteBlockListProps) => {\n  const {\n    messageList,\n    moveToBottomFn,\n  } = props;\n\n  if(messageList.length === 0) {\n    return (\n      <Typography variant={'h5'} color={'textSecondary'}>\n        {'No notes yet :>'}\n      </Typography>\n    );\n  }\n\n  const messageListWithDate = HandleMessageList\n    .convertToMessageWithDateList(messageList);\n  return (\n    <Box\n      position={'relative'}\n    >\n      <Box>\n        {messageListWithDate.map((m, i) => (\n          <NoteBlockItem\n            key={i}\n            {...m}\n            selected={checkDateIsToday(m.date)} />\n        ))}\n      </Box>\n      <Box\n        style={{\n          position: 'fixed',\n          bottom: 80,\n          right: 20,\n        }}\n      >\n        <Fab\n          size={'small'}\n          onClick={moveToBottomFn}\n        >\n          <ArrowDownward />\n        </Fab>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NoteBlockList;","import { Ref, RefObject, useRef, useCallback } from \"react\";\n\nconst useScrollToView = () => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const handleScrollToView = useCallback(() => {\n    if(ref.current) {\n      ref.current.scrollIntoView({\n        block: 'end',\n      });\n    }\n  }, []);\n\n  return ({\n    ref,\n    handleScrollToView,\n  });\n};\n\nexport default useScrollToView;","import React from 'react';\nimport { Box, RootRef } from '@material-ui/core';\nimport NoteBlockList from 'BulletNote/components/NoteBlockList';\nimport useScrollToView from 'BulletNote/functions/useScrollToView';\nimport { NoteBlockListContainerProps } from './types';\n\nconst NoteBlockListContainer = (props: NoteBlockListContainerProps) => {\n  const {\n    ref,\n    handleScrollToView,\n  } = useScrollToView();\n\n  React.useEffect(() => {\n    handleScrollToView();\n  }, [props.messageList.length, handleScrollToView]);\n\n  return (\n    <RootRef rootRef={ref}>\n      <NoteBlockList\n        {...props}\n        moveToBottomFn={handleScrollToView} />\n    </RootRef>\n  );\n};\n\nexport default NoteBlockListContainer;","import React from 'react';\nimport { Box, Typography, Divider, Paper, Button } from '@material-ui/core';\nimport { PinMessageListProps } from '../types';\nimport switchMessagesByType from '../../functions/switchMessagesByType';\nimport { MessageList } from '../../types';\n\nexport const filterPinedMessageList = (messageList: MessageList) => {\n  return messageList.filter(m => m.message.isPin);\n};\n\nconst PinMessageList = (props: PinMessageListProps) => {\n  const {\n    isShowPinMessageList,\n    toggleShowPinMessageListFn,\n    messageList,\n  } = props;\n\n  const filteredPinMessageList = filterPinedMessageList(messageList);\n\n  return (\n    <Paper elevation={2}>\n      <Box\n        display={'flex'}\n        alignItems={'center'}\n        style={{\n          position: 'sticky',\n          top: 0,\n          backgroundColor: '#fff',\n          zIndex: 100,\n        }}\n      >\n        <Typography>\n          {'Pin Messages'}\n        </Typography>\n        <Button\n          onClick={toggleShowPinMessageListFn}\n        >\n          {isShowPinMessageList ? 'Hide' : 'Show'}\n        </Button>\n      </Box>\n      <Box\n        style={{\n          display: isShowPinMessageList ? 'block' : 'none',\n        }}\n      >\n        {filteredPinMessageList.map((m, index) => (\n          switchMessagesByType({\n            index,\n            messageItemProps: m\n          })\n        ))}\n      </Box>\n      <Divider />\n    </Paper>\n  );\n};\n\nexport default PinMessageList;","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport PinMessageList from 'BulletNote/components/NotePart/PinMessageList';\nimport { PinMessageListContainerProps } from './types';\nimport useToggle from 'BulletNote/functions/useToggle';\n\nconst PinMessageListContainer = (props: PinMessageListContainerProps) => {\n  const {\n    toggle,\n    handleToggle,\n  } = useToggle();\n\n  return (\n    <PinMessageList\n      {...props}\n      isShowPinMessageList={toggle}\n      toggleShowPinMessageListFn={handleToggle}\n    />\n  );\n};\n\nexport default PinMessageListContainer;","import React from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { NotePartProps } from '../types';\nimport DownloadMessageListWithCtx from '../DownloadMessageList';\nimport RestoreBackup from '../RestoreBackup';\nimport NoteBlockListContainer from 'BulletNote/containers/NoteBlockListContainer';\nimport PinMessageListContainer from 'BulletNote/containers/NotePart/PinMessageListContainer';\n\nconst useStyles = makeStyles(() => ({\n  pinMessageListPart: {\n    position: 'sticky',\n    top: 0,\n    maxHeight: 200,\n    overflow: 'auto',\n    zIndex: 1000,\n    boxShadow: '0px 10px 10px rgba(0, 0, 0, 0.07)',\n  },\n  root: {\n    \n  }\n}));\n\nconst NotePart = (props: NotePartProps) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Box className={classes.pinMessageListPart}>\n        <PinMessageListContainer\n          messageList={props.messageList} />\n      </Box>\n      <Box>\n        <DownloadMessageListWithCtx />\n        <RestoreBackup />\n      </Box>\n      <NoteBlockListContainer\n        {...props} />\n    </>\n  );\n};\n\nexport default NotePart;","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport NotePart from '../../components/NotePart/NotePart';\nimport { BulletNoteState, ContextStore } from 'BulletNote/constants/context';\nimport { MapStateToProps, MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { connectCtx } from 'react-function-helpers';\nimport HandleDataInLocalStorage from 'BulletNote/functions/HandleDataInLocalStorage';\nimport { setMessageFromDB } from 'BulletNote/actions/message-actions';\nimport { NotePartProps } from 'BulletNote/components/types';\n\nconst NotePartContainer = (props: NotePartProps) => {\n  const {\n    setMessageFromDB\n  } = props;\n\n  React.useEffect(() => {\n    setMessageFromDB();\n  }, [setMessageFromDB]);\n\n  return (\n    <NotePart\n      {...props} />\n  );\n};\n\n\ninterface OwnProps {}\n\nconst mapStateToProps: MapStateToProps<BulletNoteState, OwnProps, Omit<NotePartProps, 'setMessageFromDB'>> = (state) => {\n  return ({\n    messageList: state.messageList,\n  });\n};\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, Omit<NotePartProps, 'messageList'>> = (dispatch) => {\n  return ({\n    setMessageFromDB: () => {\n      const messageList = HandleDataInLocalStorage.getData();\n      console.log(messageList);\n      const action = setMessageFromDB(messageList);\n      dispatch(action);\n    }\n  });\n};\n\nconst NotePartContainerWithCtx = connectCtx(ContextStore)(mapStateToProps, mapDispatchToProps)(NotePartContainer);\n\nexport default NotePartContainerWithCtx;","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZIVD5abF8A49qiz7QI1cqDner4MGtZPM\",\n  authDomain: \"bullet-note.firebaseapp.com\",\n  databaseURL: \"https://bullet-note.firebaseio.com\",\n  projectId: \"bullet-note\",\n  storageBucket: \"bullet-note.appspot.com\",\n  messagingSenderId: \"373183189354\",\n  appId: \"1:373183189354:web:7a33552c9febc150c7d513\",\n  measurementId: \"G-SPRTKCHE2L\"\n};\n\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nconst database = firebaseApp.database();\n\nexport const firebasePath = (userId: string) => (\n  `/${userId}/bullet-note`\n);\n\nexport default database;","import database, { firebasePath } from \"./config\";\nimport { ReadWriteDataToDBParams } from \"./types\";\n\nconst readFromDB = ({\n  userId,\n  successCb,\n  errorCb,\n}: ReadWriteDataToDBParams) => {\n  if(!userId) {\n    errorCb && errorCb({\n      message: 'Please check user id again.'\n    });\n  } else {\n    const path = firebasePath(userId);\n    database\n      .ref(path)\n      .once('value')\n      .then(snapshot => {\n        const value = snapshot.val();\n        if(value) {\n          console.log('snapshot from firebase: ', value);\n          successCb && successCb(value);\n        } else {\n          errorCb && errorCb({\n            message: 'User not found.'\n          });\n        }\n      })\n      .catch(err => {\n        errorCb && errorCb(err);\n      });\n  }\n};\n\nexport default readFromDB;","import { firebaseApp } from '../firebase/config';\nimport { Callback } from 'common-types';\n\nconst checkIsSignIn = (cb?: Callback) => {\n  firebaseApp.auth().onAuthStateChanged(user => {\n    let isSignedIn = false;\n    console.log(user);\n    if(user) {\n      isSignedIn = true;\n      // const isSameUser = user.uid === userId;\n      // console.log(userId);\n      // if(isSameUser) {\n      //   isSignedIn = true;\n      // };\n    } else {\n      isSignedIn = false;\n    }\n    cb && cb(isSignedIn, user);\n  });\n  // return isSignedIn;\n};\n\nexport default checkIsSignIn;","import database, { firebasePath } from \"./config\";\nimport { ReadWriteDataToDBParams } from \"./types\";\nimport checkIsSignIn from \"../SignAndLog/checkIsSignIn\";\n\nconst writeWholeDataToDB = ({\n  userId,\n  data,\n  successCb,\n  errorCb,\n}: ReadWriteDataToDBParams) => {\n  if(!userId) {\n    // window.alert('Please Login.');\n    errorCb && errorCb({\n      message: 'Please Login.',\n    });\n  } else {\n    const writeToFirebase = (isSignedIn: boolean, user: firebase.User | null) => {\n      if(user) {\n        database\n          .ref(firebasePath(user.uid))\n          .set(data)\n          .finally(() => {\n            successCb && successCb();\n          })\n          .catch((err) => {\n            errorCb && errorCb(err);\n          });\n      } else {\n        errorCb && errorCb({\n          message: 'Please Login.',\n        });\n      }\n    };\n    checkIsSignIn(writeToFirebase);\n  }\n};\n\nexport default writeWholeDataToDB;","import React, { useCallback, useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress, Typography } from '@material-ui/core';\nimport { syncTimeout } from 'BulletNote/config';\nimport writeWholeDataToDB from 'BulletNote/functions/firebase/writeToDB';\nimport { MapStateToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { BulletNoteState, ContextStore } from 'BulletNote/constants/context';\nimport { SyncToFirebaseProps } from './types';\nimport { connectCtx } from 'react-function-helpers';\nimport { useParams } from 'react-router';\nimport HandleDataInLocalStorage from 'BulletNote/functions/HandleDataInLocalStorage';\n\nconst SyncToFirebase = (props: SyncToFirebaseProps) => {\n  const {\n    messageList,\n  } = props;\n  const {\n    userId,\n  } = useParams<{ userId: string }>();\n  const jsonizedData = JSON.stringify(messageList);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setErr] = useState();\n  const [syncSuccess, setSuccess] = useState(false);\n\n  const handleSyncSuccess = useCallback(() => {\n    setLoading(false);\n    setSuccess(true);\n  }, []);\n  \n  const handleSyncData = useCallback(() => {\n    if(!syncSuccess) {\n      console.log(messageList);\n      const data = HandleDataInLocalStorage.getData();\n      setLoading(true);\n      writeWholeDataToDB({\n        userId,\n        data,\n        successCb: handleSyncSuccess,\n        errorCb: (err: any) => {\n          setErr(err);\n          setLoading(false);\n        },\n      });\n    }\n  }, [handleSyncSuccess, messageList, syncSuccess, userId]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      handleSyncData();\n    }, syncTimeout * 1000);\n    \n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [handleSyncData]);\n\n  useEffect(() => {\n    setSuccess(false);\n  }, [jsonizedData]);\n\n  if(loading) {\n    return <CircularProgress />;\n  }\n\n  if(error) {\n    return (\n      <Typography>\n        {'Check your login and network.It is off-line mode copy now.'}\n      </Typography>\n    );\n  }\n  \n  return (\n    <>\n      <Button\n        onClick={handleSyncData}\n      >\n        {'Sync'}\n      </Button>\n      {syncSuccess && 'Sync success'}\n    </>\n  );\n};\n\ninterface OwnProps {}\n\nconst mapStateToProps: MapStateToProps<BulletNoteState, OwnProps, SyncToFirebaseProps> = (state) => {\n  return ({\n    messageList: state.messageList\n  });\n};\n\nconst SyncToFirebaseWithCtx = connectCtx(ContextStore)(mapStateToProps)(SyncToFirebase);\n\nexport default SyncToFirebaseWithCtx;","import React from 'react';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport SyncToFirebaseWithCtx from 'BulletNote/containers/SyncToFirebase';\nimport { NavBarProps } from './types';\nimport { offLineModeParam } from 'BulletNote/config';\n\nexport const navHeight = 32;\n\nconst NavBar = (props: NavBarProps) => {\n  const {\n    isOffline\n  } = props;\n  \n  return (\n    <Box\n      display={'flex'}\n      alignItems={'center'}\n      justifyContent={'space-between'}\n      height={navHeight}\n      style={{\n        backgroundColor: '#bca1ed'\n      }}\n    >\n      <SyncToFirebaseWithCtx />\n      {isOffline && (\n        <Box\n          display={'flex'}\n          alignItems={'center'}\n        >\n          <Typography\n            color={'textSecondary'}\n          >\n            {'Offline Mode Now '}\n          </Typography>\n          <Button color={'primary'} href={'/'}>\n            {'Online-mode'}\n          </Button>\n        </Box>\n      )}\n      {!isOffline && (\n        <Button color={'primary'} href={`/bullet-note/${offLineModeParam}`}>\n          {'Offline-mode'}\n        </Button>\n      )}\n    </Box>\n  );\n};\n\nexport default NavBar;","import React from 'react';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { UserNotFoundPageProps } from './types';\n\nconst UserNotFoundPage = ({\n  errorMessage,\n}: UserNotFoundPageProps) => {\n  return (\n    <Box>\n      <Typography>\n        {errorMessage}\n      </Typography>\n      <Button href={'/'}>\n        {'Home'}\n      </Button>\n    </Box>\n  );\n};\n\nexport default UserNotFoundPage;","import React, { useCallback } from 'react';\nimport { Box, makeStyles, Container, CircularProgress } from '@material-ui/core';\nimport ContextWrapper from './constants/context';\nimport InputPartContainerWithCtx from './containers/InputPart/InputPartContainer';\nimport NotePartContainerWithCtx from './containers/NotePart/NotePartContainer';\nimport './styles/style.scss';\nimport { useParams } from 'react-router';\nimport HandleDataInLocalStorage from './functions/HandleDataInLocalStorage';\nimport readFromDB from './functions/firebase/readFromDB';\nimport { offLineModeParam } from './config';\nimport NavBar, { navHeight } from './components/CommonComponents/NavBar';\nimport UserNotFoundPage from './components/CommonComponents/UserNotFoundPage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '&::-webkit-scrollbar': {\n      width: 8,\n    }\n  },\n  notePart: {\n    maxHeight: `calc(100vh - 80px - ${navHeight}px)`,\n    overflow: 'auto',\n  },\n  inputPart: {\n    position: 'fixed',\n    bottom: theme.spacing(1),\n    left: theme.spacing(1),\n    right: theme.spacing(1),\n  }\n}));\n\nconst BulletNotePage = () => {\n  const classes = useStyles();\n  const {\n    userId\n  } = useParams<{ userId: string }>();\n\n  console.log(userId);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState({\n    message: '',\n  });\n  const [isOffline, setOffline] = React.useState(false);\n  // const [initMessageList, setMessageList] = React.useState<BulletNoteState['messageList']>([]);\n\n  const handleSetFirebaseDataToLS = useCallback((_userId: string) => {\n    readFromDB({\n      userId: _userId,\n      successCb: (rawData) => {\n        HandleDataInLocalStorage.setDataFromRawData(rawData);\n        setLoading(false);\n        // window.location.reload();\n      },\n      errorCb: (error) => {\n        setError(error);\n        setLoading(false);\n      }\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const LSdata = HandleDataInLocalStorage.getData();\n    const isHaveLSdata = LSdata && LSdata.length > 0;\n    const isOfflineMode = userId === offLineModeParam;\n\n    if(isOfflineMode && isHaveLSdata) {\n      setLoading(false);\n      setOffline(true);\n    } else {\n      handleSetFirebaseDataToLS(userId);\n    }\n  }, [handleSetFirebaseDataToLS, userId]);\n\n  if(loading) {\n    return (\n      <>\n        <CircularProgress />\n        {'Loading...'}\n      </>\n    );\n  }\n\n  if(error.message) {\n    return (\n      <UserNotFoundPage\n        errorMessage={error.message} />\n    );\n  }\n\n  return (\n    <ContextWrapper customInitState={{\n      // messageList: initMessageList,\n    }}>\n      <NavBar\n        isOffline={isOffline} />\n      <Container>\n        <Box className={classes.root}>\n          <Box className={classes.notePart}>\n            <NotePartContainerWithCtx />\n          </Box>\n          <Box className={classes.inputPart}>\n            <InputPartContainerWithCtx />\n          </Box>\n        </Box>\n      </Container>\n    </ContextWrapper>\n  );\n};\n\n\n\nexport default BulletNotePage;","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport checkIsSignIn from 'BulletNote/functions/SignAndLog/checkIsSignIn';\nimport { logInParam } from 'BulletNote/config';\n\n\nconst Redirect = () => {\n  const history = useHistory();\n\n  React.useEffect(() => {\n    const redirectToUserPage = (signInRes: any, user: firebase.User) => {\n      let userId = '';\n      if(user) {\n        userId = user.uid;\n        history.push(`/bullet-note/${userId}`);\n      } else {\n        history.push(`/${logInParam}`);\n      }\n    };\n\n    checkIsSignIn(redirectToUserPage);\n  }, [history]);\n\n  return (\n    <Box>\n      {'Redirecting...'}\n    </Box>\n  );\n};\n\nexport default Redirect;","import { ChangeEvent, useState, useCallback } from \"react\";\nimport { InputNameValue } from \"common-types\";\n\nfunction changeForm(e: ChangeEvent<HTMLInputElement>) {\n  return function<Form extends InputNameValue>(form: Form) {\n    console.log(e.target);\n    const { id, value } = e.target;\n    const nameValue = form[id];\n    const error = nameValue.validateFn && nameValue.validateFn(value);\n    const message = nameValue.getMessageFn && nameValue.getMessageFn(value);\n\n    return ({\n      ...form,\n      [id]: {\n        ...nameValue,\n        value,\n        error,\n        message,\n      }\n    });\n  };\n}\n\nfunction useForm<Form extends InputNameValue>(initForm: Form) {\n  const [form, setForm] = useState<Form>(initForm);\n\n  const handleChangeForm = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n    setForm(changeForm(e));\n  }, []);\n\n  return ({\n    form,\n    handleChangeForm,\n  });\n};\n\nexport default useForm;","import { firebaseApp } from \"../firebase/config\";\nimport { Callback } from \"common-types\";\n\ninterface HandleLogInToFirebaseParams {\n  email: string\n  password: string\n  successCb?: (userId: string) => any\n  errorCb: Callback\n}\n\nconst handleLogInToFirebase = ({\n  email,\n  password,\n  successCb,\n  errorCb,\n}: HandleLogInToFirebaseParams) => {\n  if(!password) {\n    return errorCb({\n      message: 'Password is required!'\n    });\n  }\n\n  if(!email) {\n    return errorCb({\n      message: 'Email is required!'\n    });\n  }\n\n  errorCb({\n    message: ''\n  });\n\n  firebaseApp\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then(credential => {\n      const { user } = credential;\n      if(user) {\n        console.log(user);\n        successCb && successCb(user.uid);\n      }\n      // console.log(credential);\n    })\n    .finally(() => {\n    })\n    .catch(err => {\n      errorCb(err);\n    });\n};\n\nexport default handleLogInToFirebase;","import React, { useCallback } from 'react';\nimport { Box, TextField, Button, Container, Typography } from '@material-ui/core';\nimport useForm from '../../lib/customHooks/useForm';\nimport { useHistory } from 'react-router';\nimport handleLogInToFirebase from 'BulletNote/functions/SignAndLog/handleLogInToFirebase';\nimport AuthPageWrapper from './wrappers/AuthPageWrapper';\n\nconst LoginPart = () => {\n  const history = useHistory();\n  const [error, setError] = React.useState({\n    message: ''\n  });\n\n  const {\n    form,\n    handleChangeForm,\n  } = useForm({\n    email: {\n      label: 'email',\n      value: '',\n    },\n    password: {\n      label: 'password',\n      value: '',\n    },\n  });\n\n  const handleLogIn = useCallback(() => {\n    console.log(form);\n    handleLogInToFirebase({\n      email: form.email.value,\n      password: form.password.value,\n      successCb: (userId: string) => history.push(`/bullet-note/${userId}`),\n      errorCb: setError,\n    });\n  }, [form, history]);\n\n  return (\n    <Container>\n      <Box\n        padding={1}\n        textAlign={'center'}\n      >\n        <Box\n          paddingBottom={1}\n          textAlign={'center'}\n        >\n          <TextField \n            id={'email'}\n            name={'email'}\n            variant={'outlined'}\n            type={'email'}\n            label={'email'}\n            onChange={handleChangeForm}\n          />\n        </Box>\n        <Box\n          paddingBottom={1}\n          textAlign={'center'}\n        >\n          <TextField \n            id={'password'}\n            name={'password'}\n            type={'password'}\n            variant={'outlined'}\n            label={'password'}\n            onChange={handleChangeForm}\n          />\n        </Box>\n        {error.message && (\n          <Typography\n            color={'error'}\n          >\n            {error.message}\n          </Typography>\n        )}\n        <Button\n          variant={'contained'}\n          color={'primary'}\n          onClick={handleLogIn}\n        >\n          {'Log in'}\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport const LoginPartWithAuth = () => (\n  <AuthPageWrapper>\n    <LoginPart />\n  </AuthPageWrapper>\n);\n\nexport default LoginPart;","import React from 'react';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { logInParam } from 'BulletNote/config';\n\nconst NotFoundPage = () => {\n  return (\n    <Box\n      textAlign={'center'}\n    >\n      <Typography variant={'h5'}>\n        {'Page Not Found, Try Links below'}\n        \n      </Typography>\n      <Button href={`/`} color={'primary'} variant={'outlined'}>\n        {'Home'}\n      </Button>\n    </Box>\n  );\n};\n\nexport default NotFoundPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BulletNotePage from './BulletNotePage';\nimport Redirect from './containers/Redirect';\nimport { logInParam } from './config';\nimport LoginPart, { LoginPartWithAuth } from './containers/LoginPart';\nimport NotFoundPage from './components/CommonComponents/NotFoundPage';\n\nconst BulletNote = () => {\n  return (\n    <Router\n      basename={process.env.PUBLIC_URL}\n    >\n      <Switch>\n        <Route \n          exact\n          path={'/bullet-note'}\n          component={Redirect} />\n        <Route \n          exact\n          path={`/bullet-note/${logInParam}`}\n          component={LoginPart} />\n        <Route\n          exact\n          path={'/bullet-note/:userId'}\n          component={BulletNotePage} />\n        <Route \n          component={NotFoundPage}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\n\n\nexport default BulletNote;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BulletNote from 'BulletNote';\n\nfunction App() {\n  return (\n    <BulletNote />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}